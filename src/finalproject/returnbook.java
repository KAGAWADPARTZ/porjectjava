/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package finalproject;
import static finalproject.borrowbook.myConn;
import static finalproject.borrowbook.myPStmt;
import static finalproject.borrowbook.myRs;
import static finalproject.borrowbook.tmodel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author PARTZ
 */
public class returnbook extends javax.swing.JFrame {

    /**
     * Creates new form returnbook
     */
    public returnbook() {
        initComponents();
        ShowTable();
    }
public static Connection myConn = null;
public static PreparedStatement myPStmt = null;
public static ResultSet myRs = null;
public static DefaultTableModel tmodel = new DefaultTableModel();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        BTNHOME = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        JTXTFRETURNBOOK = new javax.swing.JTextField();
        BTNRETURNBOOK = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        JTXTFFINDBOOK = new javax.swing.JTextField();
        BTNFINDBOOK = new javax.swing.JButton();
        BTNSHOWTABLE = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SIMPLE LIBRARY");

        jPanel1.setBackground(new java.awt.Color(51, 0, 51));

        BTNHOME.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BTNHOME.setText("HOME");
        BTNHOME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNHOMEActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("RETURN BOOKS");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable2);

        JTXTFRETURNBOOK.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        BTNRETURNBOOK.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BTNRETURNBOOK.setText("ENTER");
        BTNRETURNBOOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNRETURNBOOKActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("RETURN A BOOK");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("FIND A BOOK");

        JTXTFFINDBOOK.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        BTNFINDBOOK.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BTNFINDBOOK.setText("ENTER");
        BTNFINDBOOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNFINDBOOKActionPerformed(evt);
            }
        });

        BTNSHOWTABLE.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BTNSHOWTABLE.setText("SHOWTABLE");
        BTNSHOWTABLE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNSHOWTABLEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(137, 137, 137)
                                .addComponent(BTNSHOWTABLE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addComponent(JTXTFRETURNBOOK, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(142, 142, 142)
                                        .addComponent(BTNRETURNBOOK, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(120, 120, 120)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(43, 43, 43)
                                        .addComponent(JTXTFFINDBOOK, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(144, 144, 144)
                                        .addComponent(BTNFINDBOOK, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(116, 116, 116)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 91, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BTNHOME, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BTNHOME, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(25, 25, 25)
                        .addComponent(JTXTFRETURNBOOK, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BTNRETURNBOOK, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(JTXTFFINDBOOK, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BTNFINDBOOK, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BTNSHOWTABLE, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
private void ShowTable()
{
    String sql = "select * from return_books";
    tmodel = (DefaultTableModel) jTable2.getModel();
     tmodel.setRowCount(0);
      try {
         // Prepare Statement        
        myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/books_db","root","");
	
        myPStmt = myConn.prepareStatement(sql);   
         // Execute SQL query
        myRs = myPStmt.executeQuery();
        
        java.sql.ResultSetMetaData rsmd = myRs.getMetaData();
        int columnCount = rsmd.getColumnCount();
        
        // Add column names to the table model
        Vector<String> columns = new Vector<>();
        for (int i = 1; i <= columnCount; i++) {
            columns.add(rsmd.getColumnName(i));
        }
        tmodel.setColumnIdentifiers(columns);

        // Add rows to the table model
        while (myRs.next()) {
            Vector<Object> row = new Vector<>();
            for (int i = 1; i <= columnCount; i++) {
                row.add(myRs.getObject(i));
            }
            tmodel.addRow(row);
        }
       
        
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e, "Show Record", JOptionPane.ERROR_MESSAGE);
    }
     
}
    private void BTNHOMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNHOMEActionPerformed
        // TODO add your handling code here:
        home homeFrame = new home();
           homeFrame.setVisible(true);
           this.dispose();
    }//GEN-LAST:event_BTNHOMEActionPerformed

    private void BTNRETURNBOOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNRETURNBOOKActionPerformed
        // TODO add your handling code here:
          String BookName = JTXTFRETURNBOOK.getText(); 
          ReturnBook(BookName);
          ShowTable();
    }//GEN-LAST:event_BTNRETURNBOOKActionPerformed

    private void BTNFINDBOOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNFINDBOOKActionPerformed
        // TODO add your handling code here:
        String BookName = JTXTFFINDBOOK.getText();  
        displayAvailBooksReturn(BookName);
     
        
    }//GEN-LAST:event_BTNFINDBOOKActionPerformed

    private void BTNSHOWTABLEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNSHOWTABLEActionPerformed
        // TODO add your handling code here:
        ShowTable();
    }//GEN-LAST:event_BTNSHOWTABLEActionPerformed
private void displayAvailBooksReturn(String BookName)
    {
         DefaultTableModel tmodel = (DefaultTableModel) jTable2.getModel();
    tmodel.setRowCount(0);
    try {
        // Establish database connection
        Connection myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/books_db", "root", "");

        // Prepare the SQL statement to check if the specific book is available
        String sql = "SELECT * FROM return_books WHERE BookName = ?";
        PreparedStatement myPStmt = myConn.prepareStatement(sql);
        myPStmt.setString(1, BookName);

        // Execute the SQL query
        ResultSet myRs = myPStmt.executeQuery();

        // Check if the book exists
        if (myRs.next()) {
            // Book is available, display it in the table
            java.sql.ResultSetMetaData rsmd = myRs.getMetaData();
            int columnCount = rsmd.getColumnCount();
            Vector<String> columns = new Vector<>();
            for (int i = 1; i <= columnCount; i++) {
                columns.add(rsmd.getColumnName(i));
            }
            tmodel.setColumnIdentifiers(columns);

            // Add the book row to the table model
            Vector<Object> row = new Vector<>();
            for (int i = 1; i <= columnCount; i++) {
                row.add(myRs.getObject(i));
            }
            JOptionPane.showMessageDialog(this, "Book Found!");
            tmodel.addRow(row);
            System.out.println(row);
        } else {
            // Book is not available, display a message
            JOptionPane.showMessageDialog(null, "Book not found.", "Book Availability", JOptionPane.INFORMATION_MESSAGE);
            ShowTable();
           
        }
        
        // Close resources
        myRs.close();
        myPStmt.close();
        myConn.close();

    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e, "Show Record", JOptionPane.ERROR_MESSAGE);
    }
    }
private void ReturnBook(String BookName) {
    Connection myConn = null;
    PreparedStatement selectStmt = null;
    PreparedStatement insertStmt = null;
    PreparedStatement deleteStmt = null;
    try {
            // Establish database connection
            myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/books_db", "root", "");

            // Retrieve details of the borrowed book, including BookID
            String selectSQL = "SELECT * FROM return_books WHERE BookName = ?";
            selectStmt = myConn.prepareStatement(selectSQL);
            selectStmt.setString(1, BookName);
            ResultSet resultSet = selectStmt.executeQuery();

            // Check if the book exists in borrow_books table
            if (resultSet.next()) {
                // Retrieve BookID from the result set
                int bookID = resultSet.getInt("BookID");
                String bookName = resultSet.getString("BookName");

                // Get current date
                java.util.Date currentDate = new java.util.Date();
                // Convert to sql date
                java.sql.Date sqlDate = new java.sql.Date(currentDate.getTime());

                // Insert borrowed book details into the return_books table
                String insertSQL = "INSERT INTO borrow_books (BookID, DateReturned, BookName) VALUES (?, ?, ?)";
                insertStmt = myConn.prepareStatement(insertSQL);
                insertStmt.setInt(1, bookID);
                insertStmt.setDate(2, sqlDate);
                insertStmt.setString(3, bookName);
                // Execute the insert operation
                insertStmt.executeUpdate();

                // Delete the record of the borrowed book from the borrow_books table
                String deleteSQL = "DELETE FROM return_books WHERE BookName = ?";
                deleteStmt = myConn.prepareStatement(deleteSQL);
                deleteStmt.setString(1, BookName);
                // Execute the delete operation
                int rowsDeleted = deleteStmt.executeUpdate();
                if (rowsDeleted > 0) {
                    System.out.println("Book deleted from borrow_books table successfully.");
                } else {
                    System.out.println("Failed to delete book from borrow_books table. No matching record found.");
                }

                // Show success message
                JOptionPane.showMessageDialog(this, "Book returned successfully!");
            } else {
                // Show error message if the book is not found in borrow_books table
                JOptionPane.showMessageDialog(this, "Book not found in borrow_books table.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            // Handle SQL exceptions
            JOptionPane.showMessageDialog(null, e.getMessage(), "SQL Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
       
        } finally {
            // Close resources
            try {
                if (selectStmt != null) selectStmt.close();
                if (insertStmt != null) insertStmt.close();
                if (deleteStmt != null) deleteStmt.close();
                if (myConn != null) myConn.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
    }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(returnbook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(returnbook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(returnbook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(returnbook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new returnbook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNFINDBOOK;
    private javax.swing.JButton BTNHOME;
    private javax.swing.JButton BTNRETURNBOOK;
    private javax.swing.JButton BTNSHOWTABLE;
    private javax.swing.JTextField JTXTFFINDBOOK;
    private javax.swing.JTextField JTXTFRETURNBOOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
