/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package finalproject;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PARTZ
 */

public class borrowbook extends javax.swing.JFrame {

    /**
     * Creates new form borrowbook
     */
public static Connection myConn = null;
public static PreparedStatement myPStmt = null;
public static ResultSet myRs = null;
public static DefaultTableModel tmodel = new DefaultTableModel();
    public borrowbook() {
        initComponents();
        this.setResizable(false);
        ShowTable();
    }
private void ShowTable()
{
    String sql = "select * from borrow_books";
    tmodel = (DefaultTableModel) jTable1.getModel();
     tmodel.setRowCount(0);
      try {
         // Prepare Statement        
        myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/books_db","root","");
	
        myPStmt = myConn.prepareStatement(sql);   
         // Execute SQL query
        myRs = myPStmt.executeQuery();
        
        java.sql.ResultSetMetaData rsmd = myRs.getMetaData();
        int columnCount = rsmd.getColumnCount();
        
        // Add column names to the table model
        Vector<String> columns = new Vector<>();
        for (int i = 1; i <= columnCount; i++) {
            columns.add(rsmd.getColumnName(i));
        }
        tmodel.setColumnIdentifiers(columns);

        // Add rows to the table model
        while (myRs.next()) {
            Vector<Object> row = new Vector<>();
            for (int i = 1; i <= columnCount; i++) {
                row.add(myRs.getObject(i));
            }
            tmodel.addRow(row);
        }
       
        
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e, "Show Record", JOptionPane.ERROR_MESSAGE);
    }
     
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        BTNHOME = new javax.swing.JButton();
        JTXTFFINDBOOK = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        BTNFINDBOOK = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        JTXTFBORROWBOOK = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        BTNBORROWBOOK = new javax.swing.JButton();
        BTNSHOWTABLE = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SIMPLE LIBRARY");

        jPanel1.setBackground(new java.awt.Color(51, 0, 51));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("BORROW BOOKS");

        BTNHOME.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BTNHOME.setForeground(new java.awt.Color(0, 0, 0));
        BTNHOME.setText("HOME");
        BTNHOME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNHOMEActionPerformed(evt);
            }
        });

        JTXTFFINDBOOK.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        JTXTFFINDBOOK.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        JTXTFFINDBOOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTXTFFINDBOOKActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ENTER A BOOK TO BORROW");

        BTNFINDBOOK.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BTNFINDBOOK.setText("ENTER");
        BTNFINDBOOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNFINDBOOKActionPerformed(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));

        JTXTFBORROWBOOK.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        JTXTFBORROWBOOK.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("FIND A BOOK");

        BTNBORROWBOOK.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BTNBORROWBOOK.setText("ENTER");
        BTNBORROWBOOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNBORROWBOOKActionPerformed(evt);
            }
        });

        BTNSHOWTABLE.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BTNSHOWTABLE.setText("SHOWTABLE");
        BTNSHOWTABLE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNSHOWTABLEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(JTXTFFINDBOOK, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(50, 50, 50)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(JTXTFBORROWBOOK, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(58, 58, 58)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(149, 149, 149)
                                .addComponent(BTNBORROWBOOK)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BTNHOME))))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(BTNFINDBOOK)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(BTNSHOWTABLE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(BTNHOME, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(JTXTFBORROWBOOK, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BTNBORROWBOOK)
                        .addGap(38, 38, 38)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JTXTFFINDBOOK, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BTNFINDBOOK)
                        .addGap(120, 120, 120))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(BTNSHOWTABLE)
                        .addContainerGap(47, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void JTXTFFINDBOOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTXTFFINDBOOKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTXTFFINDBOOKActionPerformed

    private void BTNHOMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNHOMEActionPerformed
        // TODO add your handling code here:
        home homeFrame = new home();
        homeFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BTNHOMEActionPerformed

    private void BTNBORROWBOOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNBORROWBOOKActionPerformed
        // TODO add your handling code here:
         String BookName = JTXTFBORROWBOOK.getText();                 
         borrowBook(BookName);
         ShowTable();
    }//GEN-LAST:event_BTNBORROWBOOKActionPerformed

    private void BTNFINDBOOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNFINDBOOKActionPerformed
        // TODO add your handling code here:
         String BookName = JTXTFFINDBOOK.getText();
           displayBookAvailability(BookName);
    }//GEN-LAST:event_BTNFINDBOOKActionPerformed

    private void BTNSHOWTABLEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNSHOWTABLEActionPerformed
        // TODO add your handling code here:
        ShowTable();
    }//GEN-LAST:event_BTNSHOWTABLEActionPerformed
private void borrowBook(String BookName) {
    Connection myConn = null;
    PreparedStatement selectStmt = null;
    PreparedStatement insertStmt = null;
    PreparedStatement deleteStmt = null;
    try {
        // Establish database connection
        myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/books_db", "root", "");

        // Retrieve details of the borrowed book, including BookID
        String selectSQL = "SELECT * FROM borrow_books WHERE BookName = ?";
        selectStmt = myConn.prepareStatement(selectSQL);
        selectStmt.setString(1, BookName);
        ResultSet resultSet = selectStmt.executeQuery();

        // Check if the book exists in borrow_books table
        if (resultSet.next()) {
            // Retrieve BookID from the result set
            int bookID = resultSet.getInt("BookID");
            String bookName = resultSet.getString("BookName");
                
            // Get current date
            java.util.Date currentDate = new java.util.Date();
            // Convert to sql date
            java.sql.Date sqlDate = new java.sql.Date(currentDate.getTime());

            // Insert borrowed book details into the return_books table
            String insertSQL = "INSERT INTO return_books (BookID, BookName, DateBorrowed) VALUES (?, ?, ?)";
            insertStmt = myConn.prepareStatement(insertSQL);
            insertStmt.setInt(1, bookID);
            insertStmt.setString(2, bookName);
            insertStmt.setDate(3, sqlDate);
            // Execute the insert operation
            insertStmt.executeUpdate();

            // Delete the record of the borrowed book from the borrow_books table
            String deleteSQL = "DELETE FROM borrow_books WHERE BookName = ?";
            deleteStmt = myConn.prepareStatement(deleteSQL);
            deleteStmt.setString(1, BookName);
            // Execute the delete operation
            int rowsDeleted = deleteStmt.executeUpdate();
            if (rowsDeleted > 0) {
                System.out.println("Book deleted from borrow_books table successfully.");
            } else {
                System.out.println("Failed to delete book from borrow_books table. No matching record found.");
            }

            // Show success message
            JOptionPane.showMessageDialog(this, "Book borrowed successfully!");
        } else {
            // Show error message if the book is not found in borrow_books table
            JOptionPane.showMessageDialog(this, "Book not found in borrow_books table.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (Error e) {
        // Handle SQL exceptions
        JOptionPane.showMessageDialog(null, e.getMessage(), "SQL Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    } catch (Exception e) {
        // Handle other exceptions
        JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    } finally {
        
        
    }
}
private void displayBookAvailability(String BookName) {
    DefaultTableModel tmodel = (DefaultTableModel) jTable1.getModel();
    tmodel.setRowCount(0);
    try {
        // Establish database connection
        Connection myConn = DriverManager.getConnection("jdbc:mysql://localhost:3306/books_db", "root", "");

        // Prepare the SQL statement to check if the specific book is available
        String sql = "SELECT * FROM borrow_books WHERE BookName = ?";
        PreparedStatement myPStmt = myConn.prepareStatement(sql);
        myPStmt.setString(1, BookName);

        // Execute the SQL query
        ResultSet myRs = myPStmt.executeQuery();

        // Check if the book exists
        if (myRs.next()) {
            // Book is available, display it in the table
            java.sql.ResultSetMetaData rsmd = myRs.getMetaData();
            int columnCount = rsmd.getColumnCount();
            Vector<String> columns = new Vector<>();
            for (int i = 1; i <= columnCount; i++) {
                columns.add(rsmd.getColumnName(i));
            }
            tmodel.setColumnIdentifiers(columns);

            // Add the book row to the table model
            Vector<Object> row = new Vector<>();
            for (int i = 1; i <= columnCount; i++) {
                row.add(myRs.getObject(i));
            }
            JOptionPane.showMessageDialog(this, "Book Found!");
            tmodel.addRow(row);
            System.out.println(row);
        } else {
            // Book is not available, display a message
            JOptionPane.showMessageDialog(null, "Book not found.", "Book Availability", JOptionPane.INFORMATION_MESSAGE);
            ShowTable();
           
        }
        
        // Close resources
        myRs.close();
        myPStmt.close();
        myConn.close();

    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e, "Show Record", JOptionPane.ERROR_MESSAGE);
    }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(borrowbook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(borrowbook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(borrowbook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(borrowbook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new borrowbook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNBORROWBOOK;
    private javax.swing.JButton BTNFINDBOOK;
    private javax.swing.JButton BTNHOME;
    private javax.swing.JButton BTNSHOWTABLE;
    private javax.swing.JTextField JTXTFBORROWBOOK;
    private javax.swing.JTextField JTXTFFINDBOOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
